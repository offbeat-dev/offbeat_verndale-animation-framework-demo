{"version":3,"mappings":"09CAEA,MAAMA,EAA0B,CAAC,ECC3BC,MAAY,IAEZC,EAAqE,CAAC,CAC1E,WACA,UACF,IAAM,CACJ,MAAMC,EAAOC,WACbC,yBAAgB,IAAM,CAChBF,EAAK,UAAYG,IACrBH,EAAK,QAAUG,EACNA,MACR,CAACA,CAAQ,CAAC,EAENC,CACT,EAEMC,EAAe,MAAOC,GAA2C,CACjE,MAAOR,EAAM,IAAIQ,CAAE,EAEvB,OAAKC,IACIA,IAAS,WAAWD,CAAE,EACvBR,MAAIQ,EAAIC,CAAI,GAGbA,CACT,EAEaC,EAAgB,MAAOC,EAAoBH,IAAgB,CAEhE,QAAO,MAAMD,EAAaC,CAAE,EAE3B,WAAI,QAAmBI,IACtBH,kCAAQR,EAAa,UAAU,IAAMW,EAAQ,IAAI,GAAID,CAAK,EAAe,CAChF,CACH,EC/BME,EAAc,CAACC,EAAgBC,IAC5BA,EAAS,QAAgBJ,IAC9BD,kBAAeI,EAAW,IAAGH,EAAK,QAAS,EAAIA,CAAI,EACpD,EAGGK,EAAsB,CAC1B,CACE,KAAM,YACN,OAAQ,UAAM,OAAO,yBAAqB,8FAC5C,EACA,CACE,KAAM,UACN,OAAQ,IAAMC,yBAAsC,gCACpD,OAAQ,UAAM,OAAO,uBAAmB,gEACxC,OAAQJ,CACV,CACF,EAEAK,EAAe,CAAC,GAAGnB,EAAa,GAAGiB,CAAO,ECrBpCG,EAAc,CAAC,CAAC,SAAS,eAAe,gBAAgB,EACxDC,EAAO,SAAS,cAAc,MAAM,EAE1C,SAAS,iBACP,mBACA,SAAY,EACN,CAACA,EAAK,QAAQ,eAAiBD,IAC1BE,GAAO,EAAE,KAAK,IAAM,CACzBD,EAAK,QAAQ,cAAgB,OAC9B,CAEL,EACA,EACF,ECdO,MAAME,EAAc,GCCrBC,EAAUC,GAAyB,CACvC,IAAIC,EACAC,EAIJ,GAFAF,GAAWA,EAAQ,WAAYC,EAAMD,EAAQ,UAEzC,CAACC,EAAK,OACN,MAAQ,IAAI,eAEZ,OAAO,eAAmB,MAC5BE,EAAQ,IAAI,gBAGV,OAAOD,EAAY,MACjB,OAAOA,EAAY,IAErBA,EAAW,OAAe,QAE1BA,EACE,OAAO,SAAS,SAChB,KACA,OAAO,SAAS,UACf,OAAO,SAAS,KAAO,IAAM,OAAO,SAAS,KAAO,KAI3D,MAAME,GAAaF,EAAU,IAAMD,GAAK,QAAQ,eAAgB,IAAI,EAC9DE,OAAK,MAAOC,EAAW,EAAI,EAEjCD,EAAM,WAAa,UAAY,GAC/BA,EAAM,OAAS,UAAY,CACzB,GAAIA,EAAM,OAAS,KAAOA,EAAM,QAAU,IACxC,OAGE,IAACA,EAAM,cAAgBA,EAAM,aAAa,OAAO,EAAG,CAAC,IAAM,QAC7D,MAAM,MAAM,sBAAsB,EAG9B,QAAM,SAAS,cAAc,KAAK,EACxCE,EAAI,UAAYF,EAAM,aACtBE,EAAI,MAAM,aAAe,IAEzBC,EAAS,IAAM,CACb,SAAS,KAAK,aAAaD,EAAK,SAAS,KAAK,WAAW,CAAC,CAAC,EAC5D,GAEHF,EAAM,KAAK,CACb,EAEMG,EAAYzB,GAAyB,CAEvC,SAAS,aAAe,YACxB,SAAS,aAAe,cAEfA,IAEA,0BAAiB,mBAAoBA,CAAQ,CAE1D,ECzDA0B,EAAO,CAAE,SAAU,IAAIT,sBAAgC,CAAE","names":["globModules","nodes","WithCallback","once","useRef","useLayoutEffect","callback","children","getReactRoot","el","root","renderElement","node","resolve","reactModule","Component","nodeList","modules","__vitePreload","modules$1","isStorybook","body","create","PUBLIC_PATH","svgXHR","options","url","baseUrl","_ajax","_fullPath","div","domready","svgxhr"],"sources":["../../src/scripts/glob-modules.ts","../../src/scripts/helpers/react-18-shim.tsx","../../src/scripts/modules.tsx","../../src/scripts/index.ts","../../config.ts","../../src/scripts/helpers/svgxhr.ts","../../main.js"],"sourcesContent":["import type { Organism } from '@verndale/core';\n\nconst globModules: Organism[] = [];\n\nexport default globModules;\n","import React, { FC, ReactElement, useLayoutEffect, useRef } from 'react';\nimport ReactDOM, { Root as ReactRoot } from 'react-dom/client';\n\nconst nodes = new Map<Element, ReactRoot>();\n\nconst WithCallback: FC<{ callback: () => void; children: ReactElement }> = ({\n  callback,\n  children\n}) => {\n  const once = useRef<() => void>();\n  useLayoutEffect(() => {\n    if (once.current === callback) return;\n    once.current = callback;\n    callback();\n  }, [callback]);\n\n  return children;\n};\n\nconst getReactRoot = async (el: Element): Promise<ReactRoot | null> => {\n  let root = nodes.get(el);\n\n  if (!root) {\n    root = ReactDOM.createRoot(el);\n    nodes.set(el, root);\n  }\n\n  return root;\n};\n\nexport const renderElement = async (node: ReactElement, el: Element) => {\n  // Create Root Element conditionally for new React 18 Root Api\n  const root = await getReactRoot(el);\n\n  return new Promise(resolve => {\n    root?.render(<WithCallback callback={() => resolve(null)}>{node}</WithCallback>);\n  });\n};\n","import React from 'react';\nimport type { Organism } from '@verndale/core';\nimport globModules from './glob-modules';\nimport { renderElement } from './helpers/react-18-shim';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst reactModule = (Component: any, nodeList: NodeListOf<HTMLElement>) => {\n  return nodeList.forEach(node => {\n    renderElement(<Component {...node.dataset} />, node);\n  });\n};\n\nconst modules: Organism[] = [\n  {\n    name: 'accordion',\n    loader: () => import('./modules/accordion')\n  },\n  {\n    name: 'mockApi',\n    styles: () => import('../scss/modules/mock-api.scss'),\n    loader: () => import('./modules/mockApi'),\n    render: reactModule\n  }\n];\n\nexport default [...globModules, ...modules];\n","import 'focus-visible';\nimport create from '@verndale/core';\nimport modules from './modules';\n\nconst isStorybook = !!document.getElementById('storybook-root');\nconst body = document.querySelector('body') as HTMLBodyElement;\n\ndocument.addEventListener(\n  'DOMContentLoaded',\n  async () => {\n    if (!body.dataset.modulesLoaded || isStorybook) {\n      create(modules).then(() => {\n        body.dataset.modulesLoaded = 'true';\n      });\n    }\n  },\n  false\n);\n","// Public path\n// if set, make sure it ends with /\n// e.g. 'assets/'\nexport const PUBLIC_PATH = '';\n","type SvgXHRProps = {\n  filename: string;\n};\n\nconst svgXHR = (options: SvgXHRProps) => {\n  let url: string | undefined = undefined;\n  let baseUrl: string | undefined = undefined;\n\n  options && options.filename ? (url = options.filename) : null;\n\n  if (!url) return;\n  let _ajax = new XMLHttpRequest();\n\n  if (typeof XMLHttpRequest !== 'undefined') {\n    _ajax = new XMLHttpRequest();\n  }\n\n  if (typeof baseUrl === 'undefined') {\n    if (typeof baseUrl !== 'undefined') {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      baseUrl = (window as any).baseUrl;\n    } else {\n      baseUrl =\n        window.location.protocol +\n        '//' +\n        window.location.hostname +\n        (window.location.port ? ':' + window.location.port : '');\n    }\n  }\n\n  const _fullPath = (baseUrl + '/' + url).replace(/([^:]\\/)\\/+/g, '$1');\n  _ajax.open('GET', _fullPath, true);\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  _ajax.onprogress = function () {};\n  _ajax.onload = function () {\n    if (_ajax.status < 200 || _ajax.status >= 300) {\n      return;\n    }\n\n    if (!_ajax.responseText || _ajax.responseText.substr(0, 5) !== '<?xml') {\n      throw Error('Invalid SVG Response');\n    }\n\n    const div = document.createElement('div');\n    div.innerHTML = _ajax.responseText;\n    div.style.maxBlockSize = '0';\n\n    domready(() => {\n      document.body.insertBefore(div, document.body.childNodes[0]);\n    });\n  };\n  _ajax.send();\n};\n\nconst domready = (callback: () => void) => {\n  if (\n    document.readyState === 'complete' ||\n    document.readyState === 'interactive'\n  ) {\n    callback();\n  } else {\n    document.addEventListener('DOMContentLoaded', callback);\n  }\n};\n\nexport default svgXHR;\n","import 'vite/modulepreload-polyfill';\nimport './src/scripts/index';\nimport { PUBLIC_PATH } from './config';\nimport svgxhr from './src/scripts/helpers/svgxhr';\nimport.meta.glob('./src/static/images/**/*');\n\nsvgxhr({ filename: `/${PUBLIC_PATH}images/svgsheet.svg` });\n"],"file":"scripts/main.bundle.js"}